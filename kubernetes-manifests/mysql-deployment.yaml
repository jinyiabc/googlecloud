apiVersion: v1
kind: Service
metadata:
  name: flask-mysql
  labels:
    app: python-hello-world
spec:
  ports:
    - port: 3306
  selector:
    app: python-hello-world
    tier: mysql
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: python-hello-world
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-mysql
  labels:
    name: python-hello-world
spec:
  selector:
    matchLabels:
      app: python-hello-world
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: python-hello-world
        tier: mysql
    spec:
      containers:
      - image: mysql:5.6
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: DB_HOST
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: INSTANCE_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          value: "root"
        - name: DB_PASS
          value: "password"
        - name: DB_NAME
          value: "mydb"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim
